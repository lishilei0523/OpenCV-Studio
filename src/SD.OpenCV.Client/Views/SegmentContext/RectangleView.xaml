<mah:MetroWindow x:Class="SD.OpenCV.Client.Views.SegmentContext.RectangleView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:cm="http://caliburnmicro.com"
                 xmlns:busyIndicator="https://github.com/Peoky/BusyIndicator"
                 xmlns:sd="https://github.com/lishilei0523/SD.Framework"
                 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                 mc:Ignorable="d"
                 Title="矩形分割" 
                 Width="1440" Height="900" FontSize="14"
                 WindowStartupLocation="CenterOwner"
                 Style="{StaticResource MetroWindow.Styles.Clean}">

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <mah:ToggleSwitch IsOn="{Binding ShowGridLines}" OnContent="显示网格" OffContent="隐藏网格" 
                              Style="{StaticResource ToggleSwitch.Styles.Fluent}"
                              cm:Message.Attach="[Event Toggled] = [Action SwitchGridLines()]" />
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <!--Header-->
            <RowDefinition Height="30" />
            <!--Body-->
            <RowDefinition Height="*" />
            <!--控制区-->
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.Resources>
                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MahApps.Styles.ToggleButton.Flat}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SystemBaseMediumColorBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <WrapPanel Margin="4,0,0,0" VerticalAlignment="Center">
                <ToggleButton ToolTip="缩放" IsChecked="{Binding ScaleChecked}" 
                              cm:Message.Attach="OnScaleClick()">
                    <iconPacks:PackIconMaterialDesign Kind="ZoomIn" />
                </ToggleButton>
                <ToggleButton ToolTip="拖拽" IsChecked="{Binding DragChecked}" 
                              cm:Message.Attach="OnDragClick()">
                    <iconPacks:PackIconMaterialDesign Kind="Navigation" />
                </ToggleButton>
                <ToggleButton ToolTip="编辑" IsChecked="{Binding ResizeChecked}" 
                              cm:Message.Attach="OnResizeClick()">
                    <iconPacks:PackIconMaterialDesign Kind="UnfoldMore" />
                </ToggleButton>
                <ToggleButton ToolTip="矩形" IsChecked="{Binding RectangleChecked}" 
                              cm:Message.Attach="OnRectangleClick()">
                    <iconPacks:PackIconMaterialDesign Kind="CropLandscape" />
                </ToggleButton>
            </WrapPanel>
        </Grid>
        <!--Body-->
        <busyIndicator:BusyMask Grid.Row="1" IndicatorType="Cupertino" IsBusy="{Binding IsBusy}">
            <!--图像画布-->
            <GroupBox Header="{Binding RectangleL.Text}" Margin="4,4,2,4" Background="LightGray">
                <sd:CanvasEx Mode="{Binding CanvasMode}" cm:Message.Attach="
                             [Event ElementDrag] = [Action OnDragElement($source)];
                             [Event ElementResize] = [Action OnResizeElement($source)];
                             [Event Drawing] = [Action OnDrawing($source)];
                             [Event Drawn] = [Action OnDrawn($source)];">
                    <sd:CanvasEx.BackgroundImage>
                        <Image Source="{Binding BitmapSource}" />
                    </sd:CanvasEx.BackgroundImage>
                    <sd:GridLinesVisual2D Rows="1200" Cols="2000" StepSize="100"
                                          Visibility="{Binding GridLinesVisibility}"  
                                          sd:CanvasEx.Draggable="False" 
                                          sd:CanvasEx.Resizable="False" />
                </sd:CanvasEx>
            </GroupBox>
        </busyIndicator:BusyMask>
        <!--控制区-->
        <Grid Grid.Row="2" Style="{StaticResource Form.Styles.Submit.Grid}">
            <WrapPanel Style="{StaticResource Form.Styles.Submit.WrapPanel}">
                <Button Content="确定" cm:Message.Attach="Submit()" Style="{StaticResource Button.Styles.Fluent.Focus}" />
                <Button Content="取消" cm:Message.Attach="TryCloseAsync('false')" Style="{StaticResource Button.Styles.Fluent.Default}" />
            </WrapPanel>
        </Grid>
    </Grid>
</mah:MetroWindow>
