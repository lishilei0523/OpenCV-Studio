<mah:MetroWindow x:Class="SD.OpenCV.Client.Views.DrawContext.CircleView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:cm="http://caliburnmicro.com"
                 xmlns:busyIndicator="https://github.com/Peoky/BusyIndicator"
                 xmlns:sd="https://github.com/lishilei0523/SD.Framework"
                 mc:Ignorable="d"
                 Title="绘制圆形" 
                 Width="1440" Height="900" FontSize="14"
                 WindowStartupLocation="CenterOwner"
                 Style="{StaticResource MetroWindow.Styles.Clean}">
    <Grid>
        <Grid.RowDefinitions>
            <!--Body-->
            <RowDefinition Height="*" />
            <!--Footer-->
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <!--Body-->
        <busyIndicator:BusyMask Grid.Row="0" IndicatorType="Cupertino" IsBusy="{Binding IsBusy}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="275" />
                </Grid.ColumnDefinitions>
                <!--图像预览-->
                <GroupBox Grid.Column="0" Header="图像预览" Margin="4,4,2,4" Background="LightGray">
                    <sd:ScalableCanvas cm:Message.Attach="
                                       [Event MouseLeftButtonDown] = [Action OnMouseLeftDown($source, $eventArgs)];
                                       [Event MouseMove] = [Action OnMouseMove($source, $eventArgs)];
                                       [Event MouseUp] = [Action OnMouseUp()]">
                        <sd:ScalableCanvas.BackgroundImage>
                            <Image Source="{Binding BitmapSource}" />
                        </sd:ScalableCanvas.BackgroundImage>
                        <sd:GridLinesVisual2D Visibility="{Binding GridLinesVisibility}" Rows="2000" Cols="1200" StepSize="100" />
                    </sd:ScalableCanvas>
                </GroupBox>
                <!--参数&结果-->
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="210"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <!--绘制设置-->
                    <GroupBox Grid.Row="0" Header="绘制参数" Margin="2,4,4,2">
                        <StackPanel Grid.IsSharedSizeScope="True" Margin="5,20">
                            <sd:FormItem Label="颜色：">
                                <mah:ColorPicker SelectedColor="{Binding Color}" Style="{StaticResource ColorPicker.Styles.Fluent}" />
                            </sd:FormItem>
                            <sd:FormItem Label="粗细：">
                                <TextBox Text="{Binding Thickness, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{StaticResource TextBoxRevealStyle}" />
                            </sd:FormItem>
                            <sd:FormItem Label="网格线：">
                                <mah:ToggleSwitch IsOn="{Binding ShowGridLines}" OnContent="显示" OffContent="隐藏" 
                                                  Style="{StaticResource ToggleSwitch.Styles.Fluent}"
                                                  cm:Message.Attach="[Event Toggled] = [Action SwitchGridLines()]" />
                            </sd:FormItem>
                        </StackPanel>
                    </GroupBox>
                    <!--圆形列表-->
                    <GroupBox Grid.Row="1" Header="圆形列表" Margin="2,2,4,4">
                        <ListBox ItemsSource="{Binding Circles}" SelectedItem="{Binding SelectedCircle}"
                                 cm:Message.Attach="[Event SelectionChanged] = [Action OnSelectCircle()]">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <TextBlock Text="X:" />
                                        <TextBlock Text="{Binding Center.X}" />
                                        <TextBlock Text=", " />
                                        <TextBlock Text="Y:" />
                                        <TextBlock Text="{Binding Center.Y}" />
                                        <TextBlock Text=", " />
                                        <TextBlock Text="Radius:" />
                                        <TextBlock Text="{Binding Radius}" />
                                    </WrapPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>
                </Grid>
                <GridSplitter Grid.Column="0" Style="{StaticResource GridSplitter.Vertical}" />
            </Grid>
        </busyIndicator:BusyMask>
        <!--控制区-->
        <Grid Grid.Row="1" Style="{StaticResource Form.Styles.Submit.Grid}">
            <WrapPanel Style="{StaticResource Form.Styles.Submit.WrapPanel}">
                <Button Content="确定" cm:Message.Attach="Submit()" Style="{StaticResource Button.Styles.Fluent.Focus}" />
                <Button Content="取消" cm:Message.Attach="TryCloseAsync('false')" Style="{StaticResource Button.Styles.Fluent.Default}" />
            </WrapPanel>
        </Grid>
    </Grid>
</mah:MetroWindow>
